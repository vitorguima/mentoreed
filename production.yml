version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: ./docker/production/django/Dockerfile
    command: /start
    image: mentoreed
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    depends_on: &default_depends_on
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - reverseproxy_nw

  postgres:
    build:
      context: .
      dockerfile: ./docker/production/postgres/Dockerfile
    image: mentoreed_database
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    networks:
      - reverseproxy_nw\
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gardener -d mentoreed"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    networks:
      - reverseproxy_nw

  celery_worker:
    image: mentoreed_celery_worker
    command: /start-celeryworker
    networks:
      - reverseproxy_nw
    <<: *default_depends_on

  flower:
    image: mentoreed_flower
    command: /start-flower
    volumes:
      - flower_data:/data
    networks:
      - reverseproxy_nw
    <<: *default_depends_on

networks:
  reverseproxy_nw:
    external: true

volumes:
  static_volume: {}
  media_volume: {}
  production_postgres_data: {}
  production_postgres_data_backups: {}
  flower_data: {}
